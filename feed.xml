<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Nintoku</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://valera-rozuvan.github.io/nintoku/feed.xml" />
<link rel="alternate" type="text/html" href="http://valera-rozuvan.github.io/nintoku" />
<updated>2015-07-10T09:36:04+00:00</updated>
<id>http://valera-rozuvan.github.io/nintoku/</id>
<author>
  <name>Valera Rozuvan</name>
  <uri>http://valera-rozuvan.github.io/nintoku/</uri>
  <email>valera.rozuvan@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Ideas: A WebGL visual Tile-o-Drom]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/ideas/webgl/visuals/tile-o-drom/ideas-a-webgl-visual-tile-o-drom</link>
  <id>http://valera-rozuvan.github.io/nintoku/ideas/webgl/visuals/tile-o-drom/ideas-a-webgl-visual-tile-o-drom</id>
  <published>2015-07-10T12:31:02+00:00</published>
  <updated>2015-07-10T12:31:02+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I decided that I am going to put up on Nintoku all of my sketches and doodles. Mostly, they will concern things I want to code. However, not only that. Sometimes I create conceptual works using pen and paper. It is very possible that in the future some of these designs will be realized = )&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2015_07_10/tile-o-dream.jpg&quot;&gt;&lt;img src=&quot;http://valera-rozuvan.github.io/nintoku/images/2015_07_10/tile-o-dream.jpg&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;Tile-o-drom&lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/ideas/webgl/visuals/tile-o-drom/ideas-a-webgl-visual-tile-o-drom&quot;&gt;Ideas: A WebGL visual Tile-o-Drom&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on July 10, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[jQuery broken promises illustrated]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/jquery/promises/jquery-broken-promises-illustrated</link>
  <id>http://valera-rozuvan.github.io/nintoku/jquery/promises/jquery-broken-promises-illustrated</id>
  <published>2015-07-08T20:36:01+00:00</published>
  <updated>2015-07-08T20:36:01+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;h2 id=&quot;jquery&quot;&gt;jQuery&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; is a famous JavaScript library that just about every web programmer has heard of, and almost all have used it at least once in their web programming career.&lt;/p&gt;

&lt;p&gt;jQuery has support for promises. It has nice documentation on them: see &lt;a href=&quot;https://api.jquery.com/promise/&quot;&gt;.promise()&lt;/a&gt;, &lt;a href=&quot;https://api.jquery.com/deferred.promise/&quot;&gt;deferred.promise()&lt;/a&gt;, and &lt;a href=&quot;https://api.jquery.com/category/deferred-object/&quot;&gt;Deferred Object&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;promises&quot;&gt;Promises&lt;/h2&gt;

&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Futures_and_promises&quot;&gt;promise&lt;/a&gt; is a way to reduce this&lt;/p&gt;

&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;asyncCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;anotherAsyncCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;calllback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;oneMoreAsyncCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// are we done yet?&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;to this&lt;/p&gt;

&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;asyncCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// do something...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;anotherAsyncCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// do something...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;oneMoreAsyncCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// the third and final async response&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// handle any error resulting from any of the above calls&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The above two JavaScript excerpts have been taken from &lt;a href=&quot;http://12devs.co.uk/articles/promises-an-alternative-way-to-approach-asynchronous-javascript/&quot;&gt;Promises – an alternative way to approach asynchronous JavaScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Several promise specification for JavaScript exist, &lt;em&gt;Promises/A+&lt;/em&gt; being the most widely used.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Promises/A &lt;a href=&quot;http://wiki.commonjs.org/wiki/Promises/A&quot;&gt;http://wiki.commonjs.org/wiki/Promises/A&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Promises/A+ &lt;a href=&quot;https://promisesaplus.com/&quot;&gt;https://promisesaplus.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ES6 Promise Objects &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects&quot;&gt;http://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-problem-with-jquerys-promises&quot;&gt;The problem with jQuery’s promises&lt;/h2&gt;

&lt;p&gt;jQuery’s promise implementation is pretty broken. It does not adheer to the Promises/A+ specification used by the vast majority of other promise implementations. See the &lt;a href=&quot;https://promisesaplus.com/implementations&quot;&gt;list of Promises/A+ implementations&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;an-illustration&quot;&gt;An illustration&lt;/h2&gt;

&lt;p&gt;Using the latest of either jQuery 1.x or 2.x, let’s write the following JavaScript test program:&lt;/p&gt;

&lt;table class=&quot;highlighttable&quot;&gt;&lt;tr&gt;&lt;td class=&quot;linenos&quot;&gt;&lt;div class=&quot;linenodiv&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;syncWorkFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;asyncWorkFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;promiseTests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;output&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Deferred&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;syncWorkFunc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;asyncWorkFunc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promiseTests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;0.) myObject.state = &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;syncWorkFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// asyncWorkFunc();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[THEN #1] Setting myObject.state to &amp;quot;X&amp;quot;.&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;X&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1.) Setting myObject.state to &amp;quot;A&amp;quot;.&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;A&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// syncWorkFunc();&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// asyncWorkFunc();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2.) myObject.state = &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[THEN #2] myObject.state = &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[THEN #3] myObject.state = &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;[THEN #4] myObject.state = &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;3.)&amp;lt;br /&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The output of the above JavaScript program will be:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0.) myObject.state = null
[THEN #1] Setting myObject.state to &amp;quot;X&amp;quot;.
1.) Setting myObject.state to &amp;quot;A&amp;quot;.
2.) myObject.state = A
[THEN #2] myObject.state = A
[THEN #3] myObject.state = A
[THEN #4] myObject.state = A
3.)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Two things went wrong here. All of &lt;code&gt;THEN {#}&lt;/code&gt; logs should be at the end of the output. Also, and this is most important of all, in the end &lt;code&gt;myObject.state&lt;/code&gt; did not change to &lt;code&gt;&quot;X&quot;&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;If we use a real Promise/A+ implementation, we will get:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;0.) myObject.state = null
1.) Setting myObject.state to &amp;quot;A&amp;quot;.
2.) myObject.state = A
3.)
[THEN #1] Setting myObject.state to &amp;quot;X&amp;quot;.
[THEN #2] myObject.state = X
[THEN #3] myObject.state = X
[THEN #4] myObject.state = X&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see these results for yourself. A JS Fiddle has been setup with jQuery 2.1.4 &lt;a href=&quot;https://jsfiddle.net/4988rggu/4/&quot;&gt;here&lt;/a&gt;. For valid Promise/A+ implementation I chose Angular JS. It’s promise system &lt;a href=&quot;https://docs.angularjs.org/api/ng/service/$q&quot;&gt;$q&lt;/a&gt; is based on &lt;a href=&quot;https://github.com/kriskowal/q&quot;&gt;Kris Kowal’s Q&lt;/a&gt;. A JS Fiddle has been setup with Angular JS 1.4.2 &lt;a href=&quot;https://jsfiddle.net/xfmetfoL/4/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;when-will-promises-be-fixed-in-jquery&quot;&gt;When will promises be fixed in jQuery?&lt;/h2&gt;

&lt;p&gt;When jQuery 3.0 comes out. Refer to the blog post &lt;a href=&quot;http://blog.jquery.com/2014/10/29/jquery-3-0-the-next-generations/&quot;&gt;jQuery 3.0: The Next Generations&lt;/a&gt;, and also &lt;a href=&quot;https://github.com/jquery/jquery/pull/1996&quot;&gt;jQuery’s work on getting their promises to pass the Promises/A+ test suite&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;useful-links&quot;&gt;Useful links&lt;/h2&gt;

&lt;p&gt;The problem discussed in this post is a well known one. It has been discussed previously by other people on the Internet. Be sure to go over all of the following resources:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/domenic/3889970&quot;&gt;You’re Missing the Point of Promises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/17617545/working-with-jquery-promises&quot;&gt;working with jQuery promises&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://thewayofcode.wordpress.com/2013/01/22/javascript-promises-and-why-jquery-implementation-is-broken/&quot;&gt;JAVASCRIPT PROMISES AND WHY JQUERY IMPLEMENTATION IS BROKEN&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://abdulapopoola.com/2014/12/12/the-differences-between-jquery-deferreds-and-the-promisesa-spec/&quot;&gt;The Differences between jQuery Deferreds and the Promises/A+ spec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/23744612/problems-inherent-to-jquery-deferred&quot;&gt;Problems inherent to jQuery $.Deferred&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/kriskowal/q/wiki/Coming-from-jQuery&quot;&gt;Coming from jQuery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jquery/jquery/pull/1996&quot;&gt;Deferred: Backwards-compatible standards interoperability&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/jquery/promises/jquery-broken-promises-illustrated&quot;&gt;jQuery broken promises illustrated&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on July 08, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Adding Sublime Text to Debian menu]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/sublime/text/debian/menu/adding-sublime-text-to-debian-menu</link>
  <id>http://valera-rozuvan.github.io/nintoku/sublime/text/debian/menu/adding-sublime-text-to-debian-menu</id>
  <published>2015-03-15T00:00:00+00:00</published>
  <updated>2015-03-15T00:00:00+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I am currently using Debian 7 Wheezy. When installing the system, I didn’t
go with Gnome, and opted for a much simpler Blackbox window manager. Blackbox
out of the bocks integrates the Debian menu into it’s context menu (right
click anywhere on the desktop to get the context drop-down). Most of the
applications you install using the dpkg system come pre-configured to add
friendly launch entries into the Debian menu. However, sometimes after you
install an application you find that you can only launch it from the terminal.
So is the case with Sublime Text 3 editor.&lt;/p&gt;

&lt;p&gt;To add a menu launcher for Sublime, create a file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/.menu/subl
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;with the following contents:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;?package(sublime-text):needs=&quot;X11&quot; section=&quot;Applications/Editors&quot; hints=&quot;Text editor&quot;\
longtitle=&quot;Sublime Text 3&quot;\
title=&quot;Sublime&quot; command=&quot;/usr/bin/subl&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then update the Debian menu with the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo update-menus -v --menufilesdir=~/.menu
&lt;/code&gt;&lt;/pre&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/sublime/text/debian/menu/adding-sublime-text-to-debian-menu&quot;&gt;Adding Sublime Text to Debian menu&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on March 15, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Scrobbling to Last.fm from Linux]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/scrobbling/last-fm/linux/scrobbling-to-lastfm-from-linux</link>
  <id>http://valera-rozuvan.github.io/nintoku/scrobbling/last-fm/linux/scrobbling-to-lastfm-from-linux</id>
  <published>2014-06-15T22:57:24+00:00</published>
  <updated>2014-06-15T22:57:24+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;A brief note on Last.fm and scrobbling:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;music website, founded in the United Kingdom in 2002. Using a music
recommender system called “Audioscrobbler”, Last.fm builds a detailed
profile of each user’s musical taste by recording details of the tracks
the user listens to, either from Internet radio stations, or the user’s
computer or many portable music devices. This information is transferred
(“scrobbled”) to Last.fm’s database either via the music player itself
(Rdio, Spotify, Clementine, Amarok) or via a plugin installed into the
user’s music player. The data are then displayed on the user’s profile
page and compiled to create reference pages for individual artists.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;(from &lt;a href=&quot;http://en.wikipedia.org/wiki/Last.fm&quot;&gt;Wikipedia’s article&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;So basically as I listen to music, Last.fm allows for other to see
what I am listening to, and also view the history of what I have listened
to in the past. Take a look at my
&lt;a href=&quot;http://www.last.fm/user/valerarozuvan&quot;&gt;statistics page&lt;/a&gt;, and at
&lt;a href=&quot;http://www.last.fm/user/valerarozuvan/now&quot;&gt;what I am listening to now&lt;/a&gt;. The
second page automatically refreshes the information as music tracks change!&lt;/p&gt;

&lt;p&gt;So since I am a Linux guy, I have configured myself the following setup to
have my played music be scrobbled to Last.fm.&lt;/p&gt;

&lt;p&gt;Introducing&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://mpd.wikia.com/wiki/Music_Player_Daemon_Wiki&quot;&gt;Music Player Daemon (MPD)&lt;/a&gt;&lt;/strong&gt;
is a flexible, powerful, server-side application for playing music.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/multani/sonata&quot;&gt;Sonata&lt;/a&gt;&lt;/strong&gt; - an elegant music client for MPD.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.ohloh.net/p/mpdscribble&quot;&gt;mpdscribble&lt;/a&gt;&lt;/strong&gt; is a music player daemon
client which submits information about tracks being played to audioscrobbler.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below are the configuration files for &lt;strong&gt;MPD&lt;/strong&gt; and &lt;strong&gt;mpdscribble&lt;/strong&gt;. I am placing
them here for the curious soul, and for my own reference.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ cat ~/.mpd.d/mpd.conf
follow_outside_symlinks &amp;quot;no&amp;quot;
follow_inside_symlinks &amp;quot;no&amp;quot;
db_file &amp;quot;/home/valera/.mpd.d/db&amp;quot;
sticker_file &amp;quot;/home/valera/.mpd.d/sticker&amp;quot;
log_file &amp;quot;/home/valera/.mpd.d/log&amp;quot;
music_directory &amp;quot;/home/valera/Music&amp;quot;
playlist_directory &amp;quot;/home/valera/.mpd.d/playlists&amp;quot;
pid_file &amp;quot;/home/valera/.mpd.d/pid&amp;quot;
audio_output_format &amp;quot;44100:16:2&amp;quot;
samplerate_converter &amp;quot;0&amp;quot;
volume_normalization &amp;quot;yes&amp;quot;
audio_buffer_size &amp;quot;4096&amp;quot;
auto_update &amp;quot;yes&amp;quot;
audio_output {
    type &amp;quot;alsa&amp;quot;
    name &amp;quot;AlsaOut1&amp;quot;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ cat ~/.mpdscribble/mpdscribble.conf
url = http://post.audioscrobbler.com
username = valerarozuvan
password = your_password

pidfile = /home/valera/.mpdscribble/pid&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Update your &lt;code&gt;init.d&lt;/code&gt; script for &lt;strong&gt;MPD&lt;/strong&gt; to point to your configuration file.
In my case I have a line in the file &lt;code&gt;/etc/init.d/mpd&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;MPDCONF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/home/valera/.mpd.d/mpd.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also, update the configuration file &lt;code&gt;/etc/default/mpdscribble&lt;/code&gt; for
&lt;strong&gt;mpdscribble&lt;/strong&gt; so it has the following lines:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;MPD_SYSTEMWIDE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;DAEMON_OPTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;--conf /home/valera/.mpdscribble/mpdscribble.conf&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;USER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;valera&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;PLEASE NOTE: In all of the above files, make sure to update the paths
of files so that they contain your Linux user name!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/scrobbling/last-fm/linux/scrobbling-to-lastfm-from-linux&quot;&gt;Scrobbling to Last.fm from Linux&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on June 15, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Smart Pomodoro Workflow]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/smart/pomodoro/workflow/smart-pomodoro-workflow</link>
  <id>http://valera-rozuvan.github.io/nintoku/smart/pomodoro/workflow/smart-pomodoro-workflow</id>
  <published>2014-05-23T13:31:18+00:00</published>
  <updated>2014-05-23T13:31:18+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Pomodoro_Technique&quot;&gt;Pomodoro&lt;/a&gt; is a technique to
allow for greater control on working. The main idea is that&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You pick a task, write it down.&lt;/li&gt;
  &lt;li&gt;Start your Pomodoro timer.&lt;/li&gt;
  &lt;li&gt;Work only on the task while the Pomodoro timer is ticking. No multitasking!
No switching to something else - even for a minute!&lt;/li&gt;
  &lt;li&gt;When the Pomodoro timer stops, you stop working at the task and mark it
on paper.&lt;/li&gt;
  &lt;li&gt;Take a break.&lt;/li&gt;
  &lt;li&gt;Repeat the whole process from step 1.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Two issues come up with the basic Pomodoro technique.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;What if you are interrupted during a Pomodoro session?&lt;/li&gt;
  &lt;li&gt;What if you complete the task before the Pomodoro timer goes off?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I believe that both cases can be handled by modifying step 4 of the above list,
so that it includes:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are interrupted, or you complete the task before the Pomodoro timer
stops, then stop the Pomodoro timer manually, and continue to the next step.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This little change makes a big difference to the original Pomodoro technique.
It ensures that you work on a task uninterrupted, that you stay in the zone.
You are required to start-over the whole process if you are interrupted, or
you complete a task early.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;smart&lt;/strong&gt; thing is that a Pomodoro session is for one and one task only.
The &lt;strong&gt;smart&lt;/strong&gt; thing is that a Pomodoro session can’t be interrupted - it can
only be stopped.&lt;/p&gt;

&lt;p&gt;So, the &lt;strong&gt;Smart&lt;/strong&gt; Pomodoro process is as follows:&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_05_23/smart_pomodoro_workflow.png&quot;&gt;&lt;img src=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_05_23/smart_pomodoro_workflow.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_05_23/smart_pomodoro_workflow.png&quot; title=&quot;Smart Pomodoro Workflow&quot;&gt;Smart Pomodoro Workflow&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;The key thing to note is that this approach enforces you to work on a task
for a set period of time without interruptions and task switching. The Pomodoro
timer can be set to anything you like. Ideally, with the &lt;strong&gt;Smart&lt;/strong&gt; Pomodoro
workflow, you will achieve an in-the-zone working experience!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/smart/pomodoro/workflow/smart-pomodoro-workflow&quot;&gt;Smart Pomodoro Workflow&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on May 23, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Managing the Development of Large Software Systems]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/management/development/software/systems/managing-the-development-of-large-software-systems</link>
  <id>http://valera-rozuvan.github.io/nintoku/management/development/software/systems/managing-the-development-of-large-software-systems</id>
  <published>2014-05-23T11:07:32+00:00</published>
  <updated>2014-05-23T11:07:32+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;During the past couple of days I had some free time to read up material on
the process of software development. Such things as
&lt;a href=&quot;http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29&quot;&gt;SOLID&lt;/a&gt;
design, and the &lt;a href=&quot;http://en.wikipedia.org/wiki/Agile_software_development&quot;&gt;Agile&lt;/a&gt;
methodology are very much discussed and used in the current programming world.
It is interesting to look back on the history of the computer programming field
and software development in general. I found an early work that influenced the
current trends. The work is entitled
&lt;strong&gt;Managing the Development of Large Software Systems&lt;/strong&gt; by
&lt;a href=&quot;http://en.wikipedia.org/wiki/Winston_W._Royce&quot;&gt;Dr. Winston W. Royce&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-process&quot;&gt;The process&lt;/h2&gt;

&lt;p&gt;Royce begins his thesis by arguing that for a simple program that is written with the
purpose of being used by the sole developer (or the few developers that write this program)
only two steps are necessary:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;analysis&lt;/li&gt;
  &lt;li&gt;coding&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Royce then goes on to point out that if a very large software system is to be built that is
mission-critical and will face a large user audience, then the two step process must be greatly
expanded:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;system requirements&lt;/li&gt;
  &lt;li&gt;software requirements&lt;/li&gt;
  &lt;li&gt;analysis&lt;/li&gt;
  &lt;li&gt;program design&lt;/li&gt;
  &lt;li&gt;coding&lt;/li&gt;
  &lt;li&gt;testing&lt;/li&gt;
  &lt;li&gt;operations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From a first glance, it is understandable that this multi step process will drive up
the development costs. Customers typically would rather not pay for the additional
steps, and developers would rather not implement them. Royce makes a remark that&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The prime function of management is to sell these concepts (steps) to both groups
and then enforce compliance on the part of developers.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;documentation&quot;&gt;Documentation&lt;/h2&gt;

&lt;p&gt;Besides going in depth for each step, Royce makes a point on documentation. The following
little excerpt shows just how much documentation is important in the view of Royce.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Occasionally I am called upon to review the progress of other software design efforts.
My first step is to investigate the state of the documentation. If the documentation is in
serious default my first recommendation is simple. Replace project management. Stop all
activities not related to documentation. Bring the documentation up to acceptable
standards. Management of software is simply impossible without a very high degree of
documentation. As an example, let me offer the following estimates for comparison. In
order to produce a 5 million dollar hardware device, I would expect that a 30 page
specification would provide adequate detail to control the procurement. In order to
produce 5 million dollars of software I would estimate a 1500 page specification is about
right in order to achieve comparable control.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The work &lt;strong&gt;Managing the Development of Large Software Systems&lt;/strong&gt; was written in 1970. Obviously,
much has changed in the software world since then. However, I found that Royce has some sound
advice that can be applied to today’s projects. Then again, you can just read it for the sake
of having an understating of how management of software projects evolved.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/management/development/software/systems/managing-the-development-of-large-software-systems&quot;&gt;Managing the Development of Large Software Systems&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on May 23, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Parsing URLs with JavaScript]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/parsing/url/javascript/parsing-urls-with-javascript</link>
  <id>http://valera-rozuvan.github.io/nintoku/parsing/url/javascript/parsing-urls-with-javascript</id>
  <published>2014-04-28T20:41:50+00:00</published>
  <updated>2014-04-28T20:41:50+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;When one needs to parse a
&lt;a href=&quot;http://en.wikipedia.org/wiki/Uniform_resource_locator&quot;&gt;Uniform Resource Locator (URL)&lt;/a&gt;
on the front-end with JavaScript, there are really two choices.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Do it using a regExp.&lt;/li&gt;
  &lt;li&gt;Use a HTML &lt;a href=&quot;&quot;&gt;&lt;/a&gt; element.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below is a list of sites dedicated to this topic&lt;/p&gt;

&lt;h2 id=&quot;libraries&quot;&gt;Libraries&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://medialize.github.io/URI.js&quot;&gt;URI.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.org/package/URIjs&quot;&gt;URI.js (for Node.js)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodejs.org/api/url.html&quot;&gt;Node.js URL module&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.stevenlevithan.com/archives/parseuri&quot;&gt;parseUri&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/MoOx/Url.js&quot;&gt;Url.js&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/jed/964849&quot;&gt;parseURL&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gists&quot;&gt;Gists&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/sairion/7065921&quot;&gt;Slice URL and get param values via JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/jlong/2428561&quot;&gt;URI Parsing with Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;jsperf-suites&quot;&gt;jsperf suites&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jsperf.com/get-hostname-from-url&quot;&gt;Hostname from url&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jsperf.com/url-parsing&quot;&gt;URL Parsing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jsperf.com/url-parsing/2&quot;&gt;URL Parsing (Revision 2)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jsperf.com/url-parsing/5&quot;&gt;URL Parsing (Revision 5)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;stackoverflow-questions&quot;&gt;StackOverflow questions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6644654/parse-url-with-jquery-javascript&quot;&gt;Parse URL with jquery/ javascript?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4140324/parse-url-with-javascript&quot;&gt;Parse URL with Javascript (duplicate)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;js-bin-examples&quot;&gt;JS Bin examples&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://jsbin.com/eqoruj/2/edit&quot;&gt;Example 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;blog-entries&quot;&gt;Blog entries&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://tantek.com/2011/238/b1/many-ways-slice-url-name-pieces&quot;&gt;How many ways can you slice a URL and name the pieces?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://james.padolsey.com/javascript/parsing-urls-with-the-dom&quot;&gt;Parsing URLs with the DOM!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://grack.com/blog/2009/11/17/absolutizing-url-in-javascript&quot;&gt;Absolutizing URLs in Javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://tutorialzine.com/2013/07/quick-tip-parse-urls&quot;&gt;Quick Tip: The Easiest Way to Parse URLs with JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.joezimjs.com/javascript/the-lazy-mans-url-parsing&quot;&gt;The Lazy Man’s URL Parsing in JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://iclanzan.com/parsing-urls-with-javascript&quot;&gt;Parsing URLs with JavaScript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.abeautifulsite.net/blog/2013/10/parsing-urls-in-javascript&quot;&gt;Parsing URLs in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rfc-specifications&quot;&gt;RFC specifications&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.w3.org/Addressing/URL/url-spec.txt&quot;&gt;Uniform Resource Locators (URL)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc3986.txt&quot;&gt;Uniform Resource Identifier (URI): Generic Syntax&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;online-live-examples&quot;&gt;Online live examples&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.freeformatter.com/url-parser-query-string-splitter.html&quot;&gt;URL Parser / Query String Splitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/parsing/url/javascript/parsing-urls-with-javascript&quot;&gt;Parsing URLs with JavaScript&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 28, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Release of a photoblog]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/release/photoblog/release-of-a-photoblog</link>
  <id>http://valera-rozuvan.github.io/nintoku/release/photoblog/release-of-a-photoblog</id>
  <published>2014-04-24T07:18:40+00:00</published>
  <updated>2014-04-24T07:18:40+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;When you capture a photograph, you imprint a small memory
onto a piece of paper. You can look at it in a month, in a
year, in 10 years - and it will remain the same, containing
all of the details.&lt;/p&gt;

&lt;p&gt;It is important to note, that some photographs stand-out
among others. There is something special about them. You
just want to keep coming back to such a photograph to look
at it. To take in all of the details, colors, the mood.&lt;/p&gt;

&lt;p&gt;How do you become an awesome photographer? There is no easy
path. You can improve your photography skills only by practice.
Luckily, there is no hard work involved! I mean taking a photo
is a breeze, and tremendously enjoyable.&lt;/p&gt;

&lt;p&gt;Someone once said that to become a photographer you must take
10,000 photos. So I begin on my quest. You can
&lt;a href=&quot;http://valera-rozuvan.github.io/zeme-fotografia&quot;&gt;follow along&lt;/a&gt;!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/release/photoblog/release-of-a-photoblog&quot;&gt;Release of a photoblog&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 24, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[UPDATE: The New Age of JavaScript: Concurrency]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/updates/javascript/concurrency/new-age/update-the-new-age-of-javascript-concurrency</link>
  <id>http://valera-rozuvan.github.io/nintoku/updates/javascript/concurrency/new-age/update-the-new-age-of-javascript-concurrency</id>
  <published>2014-04-18T09:27:27+00:00</published>
  <updated>2014-04-18T09:27:27+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;In a previous article entitled
&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/new/age/javascript/concurrency/the-new-age-of-javascript-concurrency&quot;&gt;The New Age of JavaScript: Concurrency&lt;/a&gt;
I went on to describe how I have discovered concurrency in JavaScript
that executed in Firefox.&lt;/p&gt;

&lt;p&gt;The discovery turned out to be a fluke.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jsfiddle.net/k2h7Z/34&quot;&gt;The JSFiddle&lt;/a&gt; that demonstrated the so
called concurrency contains an error. When you enabled the
second heavy function by setting &lt;code&gt;enableHeavyFunction&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, then,
because of the heavy function’s random nature, in some cases half way
through execution an error is raised&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Error: invalid arguments

this.spectrum   = new Float32Array(bufferSize/2);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;bufferSize&lt;/code&gt; is to big, and Firefox JavaScript engine throws an error.
Because of this, the fact that the heavy function ran is not registered
in the output. So it appears that for three or four small functions only
one heavy function is run. This is not so. Both functions run one after
the other. It is just that the heavy function sometimes errors, and no
output for it is written.&lt;/p&gt;

&lt;p&gt;In Chrome this behavior did not happen because either it allows arbitrary
first argument to &lt;code&gt;Float32Array&lt;/code&gt; function, or it sets the first argument
to some predefined maximum value.&lt;/p&gt;

&lt;p&gt;In any case, I have updated &lt;a href=&quot;http://jsfiddle.net/k2h7Z/37&quot;&gt;the JSFiddle&lt;/a&gt;
to use a blocking function instead of the really large function. As can
be seen, it clearly shows that JavaScript is single-threaded across all
browsers.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/updates/javascript/concurrency/new-age/update-the-new-age-of-javascript-concurrency&quot;&gt;UPDATE: The New Age of JavaScript: Concurrency&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 18, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Little Linux command discoveries]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/linux/command/discover/little-linux-command-discoveries</link>
  <id>http://valera-rozuvan.github.io/nintoku/linux/command/discover/little-linux-command-discoveries</id>
  <published>2014-04-18T09:10:21+00:00</published>
  <updated>2014-04-18T09:10:21+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;There are several commands that I have come across yesterday that were helpful.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code&gt;git config --global core.editor emacsclient&lt;/code&gt; - make git use &lt;code&gt;emacsclient&lt;/code&gt;
for editing commit messages.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git config --global core.pager &#39;&#39;&lt;/code&gt; - make git output everything to standard
output, rather than use a pager application.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git log HEAD~10..HEAD&lt;/code&gt; - make &lt;code&gt;git log&lt;/code&gt; show only last 10 commits.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;git log --pretty=oneline | head -n 10&lt;/code&gt; - make &lt;code&gt;git log&lt;/code&gt; show last 10
commits, displaying one line per commit.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;xrandr --output LVDS --brightness 1.0&lt;/code&gt; - make screen brightness 100%.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It is interesting to observe how well the
&lt;a href=&quot;http://en.wikipedia.org/wiki/Unix_philosophy&quot;&gt;UNIX philosophy&lt;/a&gt; works. A UNIX
program does only one job, but it does it well.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/linux/command/discover/little-linux-command-discoveries&quot;&gt;Little Linux command discoveries&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 18, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Musings]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/musings/musings</link>
  <id>http://valera-rozuvan.github.io/nintoku/musings/musings</id>
  <published>2014-04-18T08:54:44+00:00</published>
  <updated>2014-04-18T08:54:44+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;It seems that I have lost my ability to work. It is as though there is no more
motivation that drives me forward.&lt;/p&gt;

&lt;p&gt;Right now I am listening to
&lt;a href=&quot;http://en.wikipedia.org/wiki/Mikhail_Glinka&quot;&gt;Glinka&lt;/a&gt; piano music. The musical
pieces are simple and very Russian. Rachmaninoff once quoted
&lt;a href=&quot;http://en.wikipedia.org/wiki/Pyotr_Ilyich_Tchaikovsky&quot;&gt;Tchaikovsky&lt;/a&gt;
saying,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Glinka is like an acorn from which all of Russian music has sprung up.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I need to get back to taking pleasure from simple things. Simple things like
the short polka for children composed by Glinka. Listening to full blown
&lt;a href=&quot;http://en.wikipedia.org/wiki/Sergei_Rachmaninoff&quot;&gt;Rachmaninoff&lt;/a&gt; piano
concertos has spoiled me to some extent. After I have heard them for more than
a dozen of times, I started to feel like I have reached and glimpsed the top
most level of perfection. As if I have reached the end. There is nothing more.&lt;/p&gt;

&lt;p&gt;But this is wrong on so many levels. Life is infinitely more complex than the
Rachmaninoff’s Second Piano concerto. I must return back to the basics. Simple,
elegant, music pieces.&lt;/p&gt;

&lt;p&gt;This philosophy of simplicity can then be transferred to the rest of my life.&lt;/p&gt;

&lt;p&gt;The complex can be left for special occasions. I should rarely listen to the
very advanced. Just to wet my appetite. Maybe separate each advance piece by 20
or 30 simple, easy to listen to, pieces.&lt;/p&gt;

&lt;p&gt;OK! So it has been decided. I will create a music library that will consist of:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;400 - 500 short, simple piano pieces.&lt;/li&gt;
  &lt;li&gt;40 - 50 long, hard piano pieces.&lt;/li&gt;
  &lt;li&gt;4 - 5 full piano concertos.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It’s funny how I have begun this article with thoughts about my inability to
work, and concluded with a plan to create a musical collection consisting of
piano pieces. Lately piano has been on my mind.&lt;/p&gt;

&lt;p&gt;PS: I am so very excited that I have finally fixed my laptop keyboard. Typing
has become so smooth and care-free! I did this on Wednesday by simply trying to
“rip” out the keyboard. I did not even bother to shutdown Linux. I was looking
at a &lt;a href=&quot;https://www.youtube.com/watch?v=Ys-7NjvciMM&quot;&gt;YouTube video&lt;/a&gt; that showed
how someone was replacing a keyboard on a laptop. In the end I did not manage
to take out the keyboard because it is actually fixated to the laptop by screws
which have to be unscrewed on the back. However, I did succeed in bending the
top of the keyboard ever so slightly, so that when I pushed it back in, all
the keys that were getting stuck before, now started to function properly. So
now I am just enjoying the typing. As I type now, I have the feeling as if my
fingers are little knifes that are passing through warm butter.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/musings/musings&quot;&gt;Musings&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 18, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[I prefer JSHint over JSLint]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/preference/jshint/jslint/i-prefer-jshint-over-jslint</link>
  <id>http://valera-rozuvan.github.io/nintoku/preference/jshint/jslint/i-prefer-jshint-over-jslint</id>
  <published>2014-04-09T10:41:41+00:00</published>
  <updated>2014-04-09T10:41:41+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;When it comes to &lt;a href=&quot;http://en.wikipedia.org/wiki/Lint_%28software%29&quot;&gt;linting&lt;/a&gt;
in JavaScript, there exist two mainstream solutions.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jslint.com&quot;&gt;JSLint&lt;/a&gt; written by
&lt;a href=&quot;http://www.crockford.com&quot;&gt;Douglas Crockford&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.jshint.com&quot;&gt;JSHint&lt;/a&gt; a fork of JSLint by the JavaScript community
that is more flexible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I have worked with JSlint for some time now. I grew frustrated with it because
it is to rigid in the way it checks and enforces errors. There are numerous
discussion happening on the Internet about what is &lt;code&gt;right&lt;/code&gt; JavaScript and
what is &lt;code&gt;wrong&lt;/code&gt; JavaScript. Frankly though, I believe that when it comes down
to introducing changes to a JavaScript file, you should only care for:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Adding/updating code so that it does not raise errors in the browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, a stray &lt;code&gt;{&lt;/code&gt; bracket left in the code by an unfortunate typo,
a forgotten global variable that really should be contained within the scope
of a function, etc.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Writing code that will not be misinterpreted by less experienced developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JavaScript is a very flexible language. Before the introduction of the
&lt;code&gt;&#39;use strict&#39;;&lt;/code&gt; feature in
&lt;a href=&quot;http://www.ecma-international.org/publications/standards/Ecma-262.htm&quot;&gt;ECMAScript 5’s&lt;/a&gt;
strict mode, the web was a wild jungle. Developers could write crazy code
that worked, but was very hard to maintain and to read.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Writing optimal code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a change in a JavaScript file does not introduce a new feature or
some kind of performance improvement, then it is strictly a stylistic change.
Such things are very personal and are project dependent. A linter should
not really care about such things as style, indentations, etc. It is up to
the developer to maintain a common approach to style within a single JavaScript
source file.&lt;/p&gt;

&lt;p&gt;Because of the above arguments, I have switched over to JSHint.&lt;/p&gt;

&lt;p&gt;For using with &lt;a href=&quot;http://www.gnu.org/software/emacs&quot;&gt;Emacs&lt;/a&gt; you can get the
excellent &lt;a href=&quot;https://github.com/daleharvey/jshint-mode&quot;&gt;jshint-mode&lt;/a&gt; by
&lt;a href=&quot;https://twitter.com/daleharvey&quot;&gt;Dale Harvey&lt;/a&gt;. I &lt;strong&gt;strongly suggest&lt;/strong&gt; that
you update the &lt;code&gt;jslint.js&lt;/code&gt; file that comes with this mode to the latest
version. The latest version can be found at the
&lt;a href=&quot;http://www.jshint.com/install&quot;&gt;download and install&lt;/a&gt; section of the JSHint
site.&lt;/p&gt;

&lt;p&gt;Checkout my &lt;a href=&quot;https://github.com/valera-rozuvan/emacs_config&quot;&gt;Emacs config&lt;/a&gt; file
for reference, if in doubt of how to install &lt;code&gt;jshint-mode&lt;/code&gt;.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/preference/jshint/jslint/i-prefer-jshint-over-jslint&quot;&gt;I prefer JSHint over JSLint&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 09, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[HARD: Project by mr. Iks]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/hard/hardstyle/project/mr/iks/hard-project-by-mr-iks</link>
  <id>http://valera-rozuvan.github.io/nintoku/hard/hardstyle/project/mr/iks/hard-project-by-mr-iks</id>
  <published>2014-04-06T01:23:11+00:00</published>
  <updated>2014-04-06T01:23:11+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;An old friend of mine has a collection of mini CDs, each containing
a compilation of &lt;a href=&quot;http://en.wikipedia.org/wiki/Hardcore_punk&quot;&gt;hardcore&lt;/a&gt;
and &lt;a href=&quot;http://en.wikipedia.org/wiki/Hardstyle&quot;&gt;hardstyle&lt;/a&gt; music.
&lt;a href=&quot;http://hard.rekvizit.net&quot;&gt;Check it out&lt;/a&gt;!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/hard/hardstyle/project/mr/iks/hard-project-by-mr-iks&quot;&gt;HARD: Project by mr. Iks&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 06, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Tiling window managers]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/tiling/window/manager/tiling-window-managers</link>
  <id>http://valera-rozuvan.github.io/nintoku/tiling/window/manager/tiling-window-managers</id>
  <published>2014-04-04T15:51:33+00:00</published>
  <updated>2014-04-04T15:51:33+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Currently, I am using the &lt;a href=&quot;https://github.com/mixu/nwm&quot;&gt;nwm&lt;/a&gt; window
manager. A &lt;a href=&quot;http://en.wikipedia.org/wiki/Window_manager&quot;&gt;window manager&lt;/a&gt; is
a:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;system software that controls the placement and appearance of windows within
a windowing system in a graphical user interface.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The nwm was written by &lt;a href=&quot;http://mixu.net&quot;&gt;Mikito Takada&lt;/a&gt; (mixu). The author
describes it as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;a dynamic window manager for X11 written with Node.js.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This window manager caught my eye because parts of it are written in the
&lt;a href=&quot;http://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript language&lt;/a&gt;. I myself
mostly code JavaScript these days, so the project jumped out at me. After
using this window manager for about a month, I have decided that it is
solid, and it’s philosophy of tiling windows is awesome. I have never before
used a &lt;a href=&quot;http://en.wikipedia.org/wiki/Tiling_window_manager&quot;&gt;tiling window manager&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;However, the nwm window manager has some quirks in it. They are not critical.
For example, not all windows from the start are positioned correctly within
an already present tiling setup (Emacs). But most of the quirks can be corrected
by simply issuing a rearrange command.&lt;/p&gt;

&lt;p&gt;I have been looking for other tiling window managers, that work well with
&lt;a href=&quot;http://en.wikipedia.org/wiki/GNOME&quot;&gt;Gnome&lt;/a&gt; out of the box. Here is the
(non-exhaustive) list (randomly ordered):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://awesome.naquadah.org&quot;&gt;awesome&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://xmonad.org&quot;&gt;xmonad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.giuspen.com/x-tile&quot;&gt;X-tile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://opensource.conformal.com/wiki/spectrwm&quot;&gt;spectrwm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gfxmonk.net/shellshape&quot;&gt;shellshape&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.bluetile.org&quot;&gt;Bluetile&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.red-bean.com/decklin/aewm&quot;&gt;aewm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/baskerville/bspwm&quot;&gt;bspwm&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.debian.org/Wmii&quot;&gt;wmii&lt;/a&gt; (&lt;a href=&quot;https://code.google.com/p/wmii&quot;&gt;official site&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A discussion on this topic, and a list of EWMH compatible window managers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://askubuntu.com/questions/1844/is-there-a-keyboard-centric-desktop-wm-available&quot;&gt;Is there a keyboard-centric desktop/WM available?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Extended_Window_Manager_Hints#Tiling_and_dynamic_window_managers&quot;&gt;Extended Window Manager Hints: Tiling and dynamic window managers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Over the next little while I hope to try some of these out!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/tiling/window/manager/tiling-window-managers&quot;&gt;Tiling window managers&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 04, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[The New Age of JavaScript: Concurrency]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/new/age/javascript/concurrency/the-new-age-of-javascript-concurrency</link>
  <id>http://valera-rozuvan.github.io/nintoku/new/age/javascript/concurrency/the-new-age-of-javascript-concurrency</id>
  <published>2014-04-02T03:43:14+00:00</published>
  <updated>2014-04-02T03:43:14+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;strong&gt;UPDATE: This post is based on an error. &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/update/update-the-new-age-of-javascript-concurrency&quot;&gt;See why.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It has long been known to me that the
&lt;a href=&quot;http://en.wikipedia.org/wiki/JavaScript&quot;&gt;JavaScript language&lt;/a&gt;
(the browser variety) is single-threaded. I.e. at any one time there is
a single thread running JavaScript code. This means that at one time
only one function can be running. A more detailed explanation of this
fact is discussed by &lt;a href=&quot;http://ejohn.org/about&quot;&gt;John Resig&lt;/a&gt; in his
&lt;a href=&quot;http://ejohn.org/blog/how-javascript-timers-work&quot;&gt;How JavaScript Timers Work&lt;/a&gt;
post.&lt;/p&gt;

&lt;p&gt;A natural question arises. If you use the
&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/window.setInterval&quot;&gt;window.setInterval&lt;/a&gt;
method to get two functions to execute periodically at the same interval,
will they always (and for all time, while the browser is open) execute
one after the other, in the order of &lt;code&gt;window.setInterval&lt;/code&gt; invocation?&lt;/p&gt;

&lt;p&gt;So, to be more precise, if we have the following code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeout1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeoutFunc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;timeout2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeoutFunc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeoutFunc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// It is given that window.output() is defined, and writes&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// it&amp;#39;s parameter to the page for the user to see.&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeoutFunc2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;will we see on the page:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;1
2
1
2
1
2
1
2
1
2
1
2
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;An interesting question. To further complicate things, what if one of
the periodically invoked functions did something else besides outputting
a number to the page. What if it took a long time to run, i.e. it would
execute 5 to 10 times longer? Would we then see something like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;2
2
2
2
1
2
2
2
1
2
2
2
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I have done a lot of reading on the subject of JavaScript concurrency,
parallelism, etc. I have started to believe that in the second example
above the two functions would still execute one after the other.&lt;/p&gt;

&lt;p&gt;Then, today, I decided to write such a test, and see for myself what
would actually happen. I have created a JSFiddle to
&lt;a href=&quot;http://jsfiddle.net/k2h7Z/34&quot;&gt;test this out&lt;/a&gt;.
The results were quite surprising for me.&lt;/p&gt;

&lt;p&gt;I have tested in Internet Explorer, Opera, Google Chrome, and Firefox.
In all browsers except Firefox the two function ran one after the other.
In Firefox, though, the more CPU expensive function was running in parallel
with the fast function. I drew this conclusion for the fact that the slow
function managed to output once in the same time that the fast function
outputted several times.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In Firefox, though, the more CPU expensive function was running in parallel
with the fast function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have used the following versions of the browsers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Internet Explorer 10.0.9200.16576&lt;/li&gt;
  &lt;li&gt;Opera 20.0.1387.82&lt;/li&gt;
  &lt;li&gt;Google Chrome 33.0.1750.154&lt;/li&gt;
  &lt;li&gt;Firefox 28.0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tested on an Intel x86 quad core machine running Windows 7.&lt;/p&gt;

&lt;p&gt;Here are the screenshots of the results.&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/internet_explorer.png&quot;&gt;&lt;img src=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/internet_explorer.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/internet_explorer.png&quot; title=&quot;Internet Explorer&quot;&gt;Internet Explorer&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
    &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/opera.png&quot;&gt;&lt;img src=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/opera.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/opera.png&quot; title=&quot;Opera&quot;&gt;Opera&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
    &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/google_chrome.png&quot;&gt;&lt;img src=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/google_chrome.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/google_chrome.png&quot; title=&quot;Google Chrome&quot;&gt;Google Chrome&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
    &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/firefox.png&quot;&gt;&lt;img src=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/firefox.png&quot; /&gt;&lt;/a&gt;
    &lt;figcaption&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/images/2014_04_02/firefox.png&quot; title=&quot;Firefox&quot;&gt;Firefox&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/new/age/javascript/concurrency/the-new-age-of-javascript-concurrency&quot;&gt;The New Age of JavaScript: Concurrency&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on April 02, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Namespacing all YouTube URLs on edX backend]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/namespacing/youtube/url/edx/backend/namespacing-all-youtube-urls-on-edx-backend</link>
  <id>http://valera-rozuvan.github.io/nintoku/namespacing/youtube/url/edx/backend/namespacing-all-youtube-urls-on-edx-backend</id>
  <published>2014-03-24T19:20:27+00:00</published>
  <updated>2014-03-24T19:20:27+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Up to now, the backend defined 2 variables which stored YouTube related URLs:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# URL to test YouTube availability&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;YOUTUBE_TEST_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;https://gdata.youtube.com/feeds/api/videos/&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Current youtube api for requesting transcripts.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# for example: http://video.google.com/timedtext?lang=en&amp;amp;v=j_jEn79vS3g.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;YOUTUBE_API&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;http://video.google.com/timedtext&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;params&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;set_youtube_id_of_11_symbols_here&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This was done in &lt;a href=&quot;https://github.com/edx/edx-platform/blob/156b5312933ff5d6849e577bbd6bf80fd48de234/cms/envs/common.py&quot;&gt;&lt;code&gt;cms/envs/common.py&lt;/code&gt;&lt;/a&gt; file (lines 428, 532).&lt;/p&gt;

&lt;p&gt;I wanted to introduce a new URL which is responsible for YouTube API on
the front-end. To do this, I have created a &lt;code&gt;YOUTUBE&lt;/code&gt; namespace, and
added a third URL to the back-end:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;YOUTUBE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# YouTube JavaScript API&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;API&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;www.youtube.com/iframe_api&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# URL to test YouTube availability&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;TEST_URL&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;gdata.youtube.com/feeds/api/videos/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;# Current youtube api for requesting transcripts.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# For example: http://video.google.com/timedtext?lang=en&amp;amp;v=j_jEn79vS3g.&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&amp;#39;TEXT_API&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;video.google.com/timedtext&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&amp;#39;params&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;#39;lang&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&amp;#39;v&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;set_youtube_id_of_11_symbols_here&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/edx/edx-platform/commit/1c8eed853ebc2788b187c231cd90ddaf05d5dbb9&quot;&gt;pull request&lt;/a&gt; has just been merged in to &lt;a href=&quot;https://github.com/edx/edx-platform&quot;&gt;edx-platform master&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This PR opens up a possibility to mock the YouTube API in acceptance tests.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/namespacing/youtube/url/edx/backend/namespacing-all-youtube-urls-on-edx-backend&quot;&gt;Namespacing all YouTube URLs on edX backend&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on March 24, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Seeking inspiration]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/seeking/inspiration/seeking-inspiration</link>
  <id>http://valera-rozuvan.github.io/nintoku/seeking/inspiration/seeking-inspiration</id>
  <published>2014-03-21T19:16:09+00:00</published>
  <updated>2014-03-21T19:16:09+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Sometimes you come to a realization that what you do does not move you anymore.
This should in no way make you drop what you are doing and fall into a despair.
Simply step back, take a deep breath. Now look at what you are doing. Consider
what impact it has on the outside world. Step into the shoes of another person,
whom you are impacting. Your work must have real world value. Not just “one man
show in your backyard woodshed”. With that knowledge, return back into your
shoes.&lt;/p&gt;

&lt;p&gt;Another point is that it pays to have a hobby, even a minor. It is very rewarding
to switch to something you love doing after long hours of work. It should be
totally different from your 8 hours that you spend daily working. The human
mind works in strange ways. It likes a change of thought direction, visual
input, and stimuli.&lt;/p&gt;

&lt;p&gt;Finally, everything you do must have inspiration backing it. Not just a reward!
Reward is something you get. Inspiration is that godly feeling that makes you
do stuff without any reward = )&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/seeking/inspiration/seeking-inspiration&quot;&gt;Seeking inspiration&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on March 21, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Kitchens and moons by Banana]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/kitchens/moons/banana/kitchens-and-moons-by-banana</link>
  <id>http://valera-rozuvan.github.io/nintoku/kitchens/moons/banana/kitchens-and-moons-by-banana</id>
  <published>2014-03-19T23:19:18+00:00</published>
  <updated>2014-03-19T23:19:18+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Today I have finally finished reading
&lt;a href=&quot;http://www.abebooks.com/Kitchen-Banana-Yoshimoto-Washington-Square-Press/11795885981/bd&quot;&gt;Kitchen&lt;/a&gt;
by &lt;a href=&quot;http://en.wikipedia.org/wiki/Banana_Yoshimoto&quot;&gt;Banana Yoshimoto&lt;/a&gt;. A total
of 150 pages of easy-paced and smooth flowing story telling.&lt;/p&gt;

&lt;p&gt;The book is actually composed of 2 different (non-related) stories. In &lt;em&gt;Kitchen&lt;/em&gt;
we get to know a young woman who is recovering from the tragedy of her grandmother’s
death. While she finds the strength and the will to live on, her life slowly
transforms. She meets a nice young man and his mother (who in reality is “the
father”), and towards the end falls in love.&lt;/p&gt;

&lt;p&gt;This is the kind of story that has highest point (climax) almost at the end. I loved how the
author was leading everything to that one grand moment.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;We all believe we can choose our own path from among the many alternatives.
But perhaps it’s more accurate to say that we make the choice unconsciously.
I think I did - but now I knew it, because now I was able to put it into words.
But I don’t mean this in the fatalistic sense; we’re constantly making choices.
With the breaths we take every day, with the expressions in our eyes, with the
daily actions we do over and over, we decide as though by instinct. And so
some of us will inevitably find ourselves rolling around in a puddle on some
roof in a strange place with a takeout &lt;em&gt;katsudon&lt;/em&gt; in the middle of winter,
looking up at the night sky, as if it were the most natural thing in the world.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This narrative follows with a short paragraph.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ah, but the moon was lovely.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The second story, &lt;em&gt;Moonlight Shadow&lt;/em&gt; is a short sketch of a teenager living
through a crisis of having lost her lover to a car accident. They knew each other
for four years, only to be so cruelly separated. The central character, Satsuki,
has support from her lover’s brother, Hiiragi, who also lost his girlfriend to
the crash. The story gets a magical touch-up when a stranger, a woman, enters
Satsuki’s world, and wonderful things start to happen.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Maybe she’s just telling me some weird kind of lie, I thought, but I wouldn’t
even mind if, bright and early, I ran there, chest pounding, only to make a
fool of myself. She had shown my heart a rainbow. The thing was … she had
reminded me that I could get excited over something unknown, and a tiny window
opened in my heart. Even if nothing happened - even if turned out to be just
the two of us watching the sparkling glints off the cold, flowing river - it
would feel good.&lt;/p&gt;
&lt;/blockquote&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/kitchens/moons/banana/kitchens-and-moons-by-banana&quot;&gt;Kitchens and moons by Banana&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on March 19, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Installing Emacs on Debian wheezy]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/installing/emacs/debian/wheezy/installing-emacs-on-debian-wheezy</link>
  <id>http://valera-rozuvan.github.io/nintoku/installing/emacs/debian/wheezy/installing-emacs-on-debian-wheezy</id>
  <published>2014-03-18T23:32:24+00:00</published>
  <updated>2014-03-18T23:32:24+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Debian 7 code named &lt;a href=&quot;https://www.debian.org/releases/wheezy&quot;&gt;wheezy&lt;/a&gt; comes bundled
with &lt;a href=&quot;https://packages.debian.org/wheezy/emacs&quot;&gt;Emacs version 23&lt;/a&gt;. I want to use
the latest and greatest
&lt;a href=&quot;http://lists.gnu.org/archive/html/info-gnu-emacs/2013-03/msg00001.html&quot;&gt;Emacs 24.3&lt;/a&gt;
= ) So, without any other words, I present to you the complete guide of how to install
Emacs 24.3.1 on Debian 7 wheezy.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo aptitude install git-core libxaw7-dev libxpm-dev libpng12-dev libtiff5-dev libgif-dev libjpeg8-dev libgtk2.0-dev libncurses5-dev autoconf automake texinfo
sudo apt-get build-dep emacs
git clone git://git.savannah.gnu.org/emacs.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;emacs/
git checkout emacs-24.3
git checkout -b custom_branch
./autogen.sh
./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/emacs24
make --jobs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2
sudo make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The above steps will install Emacs to &lt;code&gt;/opt/emacs24&lt;/code&gt;. To run Emacs, you can launch it by:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/opt/emacs24/bin/emacs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is important to add the directory, where Emacs binary is found, to the system &lt;code&gt;PATH&lt;/code&gt;
variable. The directory contains several other important Emacs related binaries:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.emacswiki.org/emacs/BuildTags&quot;&gt;ctags&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/emacs/manual/ebrowse.html&quot;&gt;ebrowse&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.gnu.org/software/emacs&quot;&gt;emacs&lt;/a&gt; -&amp;gt; emacs-24.3&lt;/li&gt;
  &lt;li&gt;emacs-24.3&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.emacswiki.org/emacs/EmacsClient&quot;&gt;emacsclient&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gnu.org/software/emacs/manual/html_node/eintr/etags.html&quot;&gt;etags&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://manned.org/grep-changelog/196b04a3&quot;&gt;grep-changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Place the following line at the bottom of your &lt;code&gt;~/.bashrc&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/opt/emacs24/bin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can run Emacs with a simple command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;emacs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/installing/emacs/debian/wheezy/installing-emacs-on-debian-wheezy&quot;&gt;Installing Emacs on Debian wheezy&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on March 18, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Using Emacs for everything]]></title>
  <link>http://valera-rozuvan.github.io/nintoku/emacs/everything/using-emacs-for-everything</link>
  <id>http://valera-rozuvan.github.io/nintoku/emacs/everything/using-emacs-for-everything</id>
  <published>2014-03-17T18:54:59+00:00</published>
  <updated>2014-03-17T18:54:59+00:00</updated>
  <author>
    <name>Valera Rozuvan</name>
    <uri>http://valera-rozuvan.github.io/nintoku</uri>
    <email>valera.rozuvan@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;When you are working with some console application such as &lt;a href=&quot;http://git-scm.com&quot;&gt;git&lt;/a&gt;, it is often
the case that a text editor is launched by the console application for you to edit some text. By
default in Debian you get &lt;a href=&quot;http://www.nano-editor.org&quot;&gt;nano&lt;/a&gt;, which is an OK editor. However,
what if you wanted to use Emacs for all text editing?&lt;/p&gt;

&lt;p&gt;Luckily, the Debian provides a really easy way to specify alternatives to just about any application.
Try running&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo update-alternatives --config editor&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will get a list of all available choices, and a prompt to set the default editor. We will create
our own little &lt;a href=&quot;http://en.wikipedia.org/wiki/Bash_%28Unix_shell%29&quot;&gt;Bash script&lt;/a&gt; that will launch
Emacs for us whenever the text editor is invoked. We will update the alternatives to set the default
editor to point to our script.&lt;/p&gt;

&lt;p&gt;For easy manipulation of the Debian alternatives I suggest the use of
&lt;a href=&quot;https://packages.debian.org/wheezy/galternatives&quot;&gt;galternatives&lt;/a&gt;. Running this tool, you can select
the &lt;code&gt;editor&lt;/code&gt; from the alternatives panel. Then you can add a new alternative pointing to
&lt;code&gt;/home/user_name/bin/editor&lt;/code&gt;, and make sure it is selected.&lt;/p&gt;

&lt;p&gt;Next create a new file &lt;code&gt;/home/user_name/bin/editor&lt;/code&gt;, make sure that it is executable, and add the
following contents to it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;num_emacs_servers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ps aux &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep -i &lt;span class=&quot;s2&quot;&gt;&amp;quot;[e]macs24-x&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; wc -l&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;$num_emacs_servers&amp;quot;&lt;/span&gt; -eq &lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Starting emacsclient&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Starting emacsclient&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; /usr/bin/emacsclient &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;# Starting emacs server&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Starting emacs24-x&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;num_emacs_servers = ${num_emacs_servers}&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; /usr/bin/emacs24-x &lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also, update the alternatives for &lt;code&gt;emacs&lt;/code&gt;, setting it to &lt;code&gt;/home/user_name/bin/editor&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, whenever you run emacs, or some other command runs the text editor, you will:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get a new Emacs started, if no Emacs is running.&lt;/li&gt;
  &lt;li&gt;Get a new frame withing an already running Emacs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You must make sure that upon start, Emacs runs the following LISP command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-lisp&quot; data-lang=&quot;lisp&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;server-start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will start an Emacs server daemon that will process any client requests.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://valera-rozuvan.github.io/nintoku/emacs/everything/using-emacs-for-everything&quot;&gt;Using Emacs for everything&lt;/a&gt; was originally published by Valera Rozuvan at &lt;a href=&quot;http://valera-rozuvan.github.io/nintoku&quot;&gt;Nintoku&lt;/a&gt; on March 17, 2014.&lt;/p&gt;</content>
</entry>

</feed>
